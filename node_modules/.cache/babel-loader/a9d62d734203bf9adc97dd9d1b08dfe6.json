{"ast":null,"code":"var _jsxFileName = \"/home/wjpereira/\\xC1rea de Trabalho/segundo/crud-api-react-turma-7/src/components/customer/ListUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { // Container, Modal, \n// Alert, Form ,\nListGroup, Row, Col, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListUser(props) {\n  _s();\n\n  const users = props.list || [];\n  const [user, setUser] = useState([]); // const [show, setShow] = useState(false);\n  // const [showEdit, setShowEdit] = useState(false);\n  // const [successDelete, setSuccessDelete] = useState(false);\n  // const handleCloseEdit = () => setShowEdit(false);\n  // const handleShowEdit = () => setShowEdit(true);\n  // const handleClose = () => setShow(false);\n  // const handleShow = () => setShow(true);\n\n  const listUser1 = () => {\n    return user.map(user => {\n      return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"itemTask\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 6,\n            md: 8,\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 6,\n            md: 8,\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 6,\n            md: 8,\n            children: user.age\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 6,\n            md: 8,\n            children: user.document\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 6,\n            md: 8,\n            children: user.tel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 6,\n            md: 8,\n            children: user.state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: \"mx-3\",\n              variant: \"secondary\",\n              onClick: () => {\n                setUser(user);\n                handleShowEdit();\n              },\n              children: \"Editar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"mx-3\",\n              variant: \"danger\",\n              onClick: () => {\n                setUser(user);\n                handleShow();\n              },\n              children: \"Deletar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this);\n    });\n  }; // return (\n  //     <Container>\n  //         {\n  //             successDelete\n  //                 ?\n  //                 <Alert key='success' variant='success'>\n  //                     <AiFillCheckCircle size=\"30\" /> Item apagado com suceso\n  //                 </Alert>\n  //                 :\n  //                 ''\n  //         }\n\n\n  /*#__PURE__*/\n  _jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(ListGroup, {\n        variant: \"flush\",\n        children: listUser1()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 13\n  }, this); //         {/* //modal edit */}\n  //         <Modal show={showEdit} onHide={handleCloseEdit}>\n  //             <Modal.Header closeButton>\n  //                 <Modal.Title>Editar Tarefa</Modal.Title>\n  //             </Modal.Header>\n  //             <Modal.Body>\n  //                 <Form.Group className=\"mb-3\" controlId=\"description\">\n  //                     <Form.Label>Descrição da Tarefa</Form.Label>\n  //                     <Form.Control type=\"text\" placeholder=\"Digite o novo nome da tarefa\"\n  //                         value={task.description}\n  //                         onChange={event => setTask({...task, description: event.target.value})} />\n  //                 </Form.Group>\n  //             </Modal.Body>\n  //             <Modal.Footer>\n  //                 <Button variant=\"secondary\" onClick={handleCloseEdit}>\n  //                     Close\n  //                 </Button>\n  //                 <Button variant=\"success\" onClick={() => {\n  //                     props.editDescription(task)\n  //                     handleCloseEdit()\n  //                     }\n  //                 }>\n  //                     Editar\n  //                 </Button>\n  //             </Modal.Footer>\n  //         </Modal>\n  //         {/* //modal delete */}\n  //         <Modal show={show} onHide={handleClose}>\n  //             <Modal.Header closeButton>\n  //                 <Modal.Title>Apagar Tarefa</Modal.Title>\n  //             </Modal.Header>\n  //             <Modal.Body>Deseja apagar a tarefa: <strong>{task.description}</strong></Modal.Body>\n  //             <Modal.Footer>\n  //                 <Button variant=\"secondary\" onClick={handleClose}>\n  //                     Close\n  //                 </Button>\n  //                 <Button variant=\"danger\" onClick={() => {\n  //                     props.delete(task.id)\n  //                     handleClose()\n  //                     setSuccessDelete(true)\n  //                     setTimeout(\n  //                         () => {\n  //                             setSuccessDelete(false)\n  //                         }, 3000)\n  //                 }}>\n  //                     Apagar\n  //                 </Button>\n  //             </Modal.Footer>\n  //         </Modal>\n  //     </Container>\n  // )\n\n}\n\n_s(ListUser, \"VklLibMv5eZEFMyAzC8A++y6mD4=\");\n\n_c = ListUser;\nexport default ListUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListUser\");","map":{"version":3,"names":["React","useState","ListGroup","Row","Col","Button","ListUser","props","users","list","user","setUser","listUser1","map","id","name","age","document","tel","state","handleShowEdit","handleShow"],"sources":["/home/wjpereira/Área de Trabalho/segundo/crud-api-react-turma-7/src/components/customer/ListUser.js"],"sourcesContent":["import React\n,\n { useState } \n from 'react'\nimport { \n    // Container, Modal, \n    // Alert, Form ,\n    ListGroup, Row, \n    Col, Button,  } from 'react-bootstrap'\n\nfunction ListUser(props) {\n\n\n\n    const users = props.list || []\n    const [user, setUser] = useState([])\n\n\n    // const [show, setShow] = useState(false);\n\n    // const [showEdit, setShowEdit] = useState(false);\n    // const [successDelete, setSuccessDelete] = useState(false);\n\n    // const handleCloseEdit = () => setShowEdit(false);\n    // const handleShowEdit = () => setShowEdit(true);\n    // const handleClose = () => setShow(false);\n    // const handleShow = () => setShow(true);\n\n    \n    const listUser1 = () => {\n        return user.map((user) => {\n            return (\n                <ListGroup.Item key={user.id}>\n                    <Row className=\"itemTask\">\n                         <Col xs={6} md={8}>\n                            {user.id}\n                        </Col>\n                        <Col xs={6} md={8}>\n                            {user.name}\n                        </Col>\n\n                        <Col xs={6} md={8}>\n                            {user.age}\n                        </Col>\n\n                        <Col xs={6} md={8}>\n                            {user.document}\n                        </Col>\n                        \n                        <Col xs={6} md={8}>\n                            {user.tel}\n                        </Col>\n\n                        <Col xs={6} md={8}>\n                            {user.state}\n                        </Col>\n                        <Col>\n              \n                            <Button className=\"mx-3\" variant=\"secondary\"\n                                onClick={() => {\n                                    setUser(user)\n                                    handleShowEdit()\n                                }}>\n                                Editar\n                            </Button>\n                            <Button className=\"mx-3\" variant=\"danger\"\n                                onClick={() => {\n                                    setUser(user)\n                                    handleShow()\n                                }}>\n                                Deletar\n                            </Button>\n                        </Col>\n                    </Row>\n                </ListGroup.Item>\n            )\n        })\n    }\n\n    // return (\n    //     <Container>\n    //         {\n    //             successDelete\n    //                 ?\n    //                 <Alert key='success' variant='success'>\n    //                     <AiFillCheckCircle size=\"30\" /> Item apagado com suceso\n    //                 </Alert>\n    //                 :\n    //                 ''\n    //         }\n\n            <Row>\n                <Col>\n                    <ListGroup variant=\"flush\">\n                        {listUser1()}\n                    </ListGroup>\n                </Col>\n            </Row>\n\n    //         {/* //modal edit */}\n    //         <Modal show={showEdit} onHide={handleCloseEdit}>\n    //             <Modal.Header closeButton>\n    //                 <Modal.Title>Editar Tarefa</Modal.Title>\n    //             </Modal.Header>\n    //             <Modal.Body>\n    //                 <Form.Group className=\"mb-3\" controlId=\"description\">\n    //                     <Form.Label>Descrição da Tarefa</Form.Label>\n    //                     <Form.Control type=\"text\" placeholder=\"Digite o novo nome da tarefa\"\n    //                         value={task.description}\n    //                         onChange={event => setTask({...task, description: event.target.value})} />\n    //                 </Form.Group>\n    //             </Modal.Body>\n    //             <Modal.Footer>\n    //                 <Button variant=\"secondary\" onClick={handleCloseEdit}>\n    //                     Close\n    //                 </Button>\n    //                 <Button variant=\"success\" onClick={() => {\n    //                     props.editDescription(task)\n    //                     handleCloseEdit()\n    //                     }\n    //                 }>\n    //                     Editar\n    //                 </Button>\n    //             </Modal.Footer>\n    //         </Modal>\n\n    //         {/* //modal delete */}\n    //         <Modal show={show} onHide={handleClose}>\n    //             <Modal.Header closeButton>\n    //                 <Modal.Title>Apagar Tarefa</Modal.Title>\n    //             </Modal.Header>\n    //             <Modal.Body>Deseja apagar a tarefa: <strong>{task.description}</strong></Modal.Body>\n    //             <Modal.Footer>\n    //                 <Button variant=\"secondary\" onClick={handleClose}>\n    //                     Close\n    //                 </Button>\n    //                 <Button variant=\"danger\" onClick={() => {\n    //                     props.delete(task.id)\n    //                     handleClose()\n    //                     setSuccessDelete(true)\n    //                     setTimeout(\n    //                         () => {\n    //                             setSuccessDelete(false)\n    //                         }, 3000)\n    //                 }}>\n    //                     Apagar\n    //                 </Button>\n    //             </Modal.Footer>\n    //         </Modal>\n    //     </Container>\n    // )\n}\n\nexport default ListUser\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}